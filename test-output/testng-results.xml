<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="8" total="14" passed="4">
  <reporter-output>
    <line>
      <![CDATA[Element found]]>
    </line>
    <line>
      <![CDATA[Element found]]>
    </line>
    <line>
      <![CDATA[Element found]]>
    </line>
    <line>
      <![CDATA[title not displayed]]>
    </line>
    <line>
      <![CDATA[title displayed]]>
    </line>
    <line>
      <![CDATA[title displayed]]>
    </line>
    <line>
      <![CDATA[Element found]]>
    </line>
    <line>
      <![CDATA[Element found]]>
    </line>
    <line>
      <![CDATA[Element found]]>
    </line>
    <line>
      <![CDATA[title not displayed]]>
    </line>
    <line>
      <![CDATA[title displayed]]>
    </line>
    <line>
      <![CDATA[title displayed]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="88060" started-at="2020-03-26T18:51:54 IST" finished-at="2020-03-26T18:53:22 IST">
    <groups>
    </groups>
    <test name="Test_chrome" duration-ms="34982" started-at="2020-03-26T18:51:54 IST" finished-at="2020-03-26T18:52:29 IST">
      <class name="regressionTestScripts.ValidLoginLogout">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:regressionTestScripts.ValidLoginLogout@5f282abb]" name="openAppn" is-config="true" duration-ms="6509" started-at="2020-03-26T18:52:20 IST" finished-at="2020-03-26T18:52:26 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="PASS" signature="validloginlogout()[pri:0, instance:regressionTestScripts.ValidLoginLogout@5f282abb]" name="validloginlogout" duration-ms="1225" started-at="2020-03-26T18:52:26 IST" finished-at="2020-03-26T18:52:27 IST">
          <reporter-output>
            <line>
              <![CDATA[title displayed]]>
            </line>
            <line>
              <![CDATA[title displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- validloginlogout -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:regressionTestScripts.ValidLoginLogout@5f282abb]" name="closeAppn" is-config="true" duration-ms="1453" started-at="2020-03-26T18:52:27 IST" finished-at="2020-03-26T18:52:29 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validloginlogout status=SUCCESS method=ValidLoginLogout.validloginlogout()[pri:0, instance:regressionTestScripts.ValidLoginLogout@5f282abb] output=title displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- regressionTestScripts.ValidLoginLogout -->
      <class name="regressionTestScripts.VerifyActitimeVersion">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@27a5f880]" name="openAppn" is-config="true" duration-ms="6518" started-at="2020-03-26T18:51:54 IST" finished-at="2020-03-26T18:52:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="PASS" signature="verifyVersion()[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@27a5f880]" name="verifyVersion" duration-ms="4066" started-at="2020-03-26T18:52:00 IST" finished-at="2020-03-26T18:52:05 IST">
          <reporter-output>
            <line>
              <![CDATA[Element found]]>
            </line>
            <line>
              <![CDATA[Element found]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyVersion -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@27a5f880]" name="closeAppn" is-config="true" duration-ms="1678" started-at="2020-03-26T18:52:05 IST" finished-at="2020-03-26T18:52:06 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyVersion status=SUCCESS method=VerifyActitimeVersion.verifyVersion()[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@27a5f880] output=Element found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- regressionTestScripts.VerifyActitimeVersion -->
      <class name="regressionTestScripts.InvalidLogin">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:regressionTestScripts.InvalidLogin@1d29cf23]" name="openAppn" is-config="true" duration-ms="6948" started-at="2020-03-26T18:52:06 IST" finished-at="2020-03-26T18:52:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="FAIL" signature="invalidLogin()[pri:0, instance:regressionTestScripts.InvalidLogin@1d29cf23]" name="invalidLogin" duration-ms="5477" started-at="2020-03-26T18:52:13 IST" finished-at="2020-03-26T18:52:19 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at generic.Base_Page.verifyTitle(Base_Page.java:33)
at regressionTestScripts.InvalidLogin.invalidLogin(InvalidLogin.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$57/1461149300.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1234)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Element found]]>
            </line>
            <line>
              <![CDATA[title not displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:regressionTestScripts.InvalidLogin@1d29cf23]" name="closeAppn" is-config="true" duration-ms="1055" started-at="2020-03-26T18:52:19 IST" finished-at="2020-03-26T18:52:20 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=FAILURE method=InvalidLogin.invalidLogin()[pri:0, instance:regressionTestScripts.InvalidLogin@1d29cf23] output=Element found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- regressionTestScripts.InvalidLogin -->
    </test> <!-- Test_chrome -->
    <test name="Test_firefox" duration-ms="53022" started-at="2020-03-26T18:52:29 IST" finished-at="2020-03-26T18:53:22 IST">
      <class name="regressionTestScripts.ValidLoginLogout">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:regressionTestScripts.ValidLoginLogout@34c4973]" name="openAppn" is-config="true" duration-ms="9425" started-at="2020-03-26T18:53:05 IST" finished-at="2020-03-26T18:53:14 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="PASS" signature="validloginlogout()[pri:0, instance:regressionTestScripts.ValidLoginLogout@34c4973]" name="validloginlogout" duration-ms="2090" started-at="2020-03-26T18:53:14 IST" finished-at="2020-03-26T18:53:16 IST">
          <reporter-output>
            <line>
              <![CDATA[title displayed]]>
            </line>
            <line>
              <![CDATA[title displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- validloginlogout -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:regressionTestScripts.ValidLoginLogout@34c4973]" name="closeAppn" is-config="true" duration-ms="5712" started-at="2020-03-26T18:53:16 IST" finished-at="2020-03-26T18:53:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validloginlogout status=SUCCESS method=ValidLoginLogout.validloginlogout()[pri:0, instance:regressionTestScripts.ValidLoginLogout@34c4973] output=title displayed]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- regressionTestScripts.ValidLoginLogout -->
      <class name="regressionTestScripts.VerifyActitimeVersion">
        <test-method status="PASS" signature="setUp()[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@30a3107a]" name="setUp" is-config="true" duration-ms="124" started-at="2020-03-26T18:51:54 IST" finished-at="2020-03-26T18:51:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@30a3107a]" name="openAppn" is-config="true" duration-ms="9742" started-at="2020-03-26T18:52:29 IST" finished-at="2020-03-26T18:52:39 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="PASS" signature="verifyVersion()[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@30a3107a]" name="verifyVersion" duration-ms="2425" started-at="2020-03-26T18:52:39 IST" finished-at="2020-03-26T18:52:41 IST">
          <reporter-output>
            <line>
              <![CDATA[Element found]]>
            </line>
            <line>
              <![CDATA[Element found]]>
            </line>
          </reporter-output>
        </test-method> <!-- verifyVersion -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@30a3107a]" name="closeAppn" is-config="true" duration-ms="4344" started-at="2020-03-26T18:52:41 IST" finished-at="2020-03-26T18:52:46 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyVersion status=SUCCESS method=VerifyActitimeVersion.verifyVersion()[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@30a3107a] output=Element found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:regressionTestScripts.VerifyActitimeVersion@30a3107a]" name="tearDown" is-config="true" duration-ms="259" started-at="2020-03-26T18:53:22 IST" finished-at="2020-03-26T18:53:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- regressionTestScripts.VerifyActitimeVersion -->
      <class name="regressionTestScripts.InvalidLogin">
        <test-method status="PASS" signature="openAppn(java.lang.String)[pri:0, instance:regressionTestScripts.InvalidLogin@33c7e1bb]" name="openAppn" is-config="true" duration-ms="9612" started-at="2020-03-26T18:52:46 IST" finished-at="2020-03-26T18:52:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openAppn -->
        <test-method status="FAIL" signature="invalidLogin()[pri:0, instance:regressionTestScripts.InvalidLogin@33c7e1bb]" name="invalidLogin" duration-ms="5463" started-at="2020-03-26T18:52:55 IST" finished-at="2020-03-26T18:53:01 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at generic.Base_Page.verifyTitle(Base_Page.java:33)
at regressionTestScripts.InvalidLogin.invalidLogin(InvalidLogin.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:483)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at org.testng.TestRunner$$Lambda$57/1461149300.accept(Unknown Source)
at java.util.ArrayList.forEach(ArrayList.java:1234)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Element found]]>
            </line>
            <line>
              <![CDATA[title not displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidLogin -->
        <test-method status="PASS" signature="closeAppn(org.testng.ITestResult)[pri:0, instance:regressionTestScripts.InvalidLogin@33c7e1bb]" name="closeAppn" is-config="true" duration-ms="4198" started-at="2020-03-26T18:53:01 IST" finished-at="2020-03-26T18:53:05 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidLogin status=FAILURE method=InvalidLogin.invalidLogin()[pri:0, instance:regressionTestScripts.InvalidLogin@33c7e1bb] output=Element found]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeAppn -->
      </class> <!-- regressionTestScripts.InvalidLogin -->
    </test> <!-- Test_firefox -->
  </suite> <!-- Suite -->
</testng-results>
